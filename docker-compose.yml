version: "3.8"
services:
    org-catalog-web:
        build:
            context: ./.docker/nginx
            dockerfile: web.dockerfile
        working_dir: /var/www
        container_name: org-catalog-web
        volumes:
            - ./:/var/www
        depends_on:
            - org-catalog-app
        ports:
            - 8080:80
        networks:
            - aggregator_network

    # PHP 8.2
    org-catalog-app:
        build:
            context: ./.docker/php
            dockerfile: app.dockerfile
        working_dir: /var/www/
        container_name: org-catalog-app
        volumes:
            - ./:/var/www
        depends_on:
            - org-catalog-db
        extra_hosts:
            - host.docker.internal:host-gateway
        environment:
            PHP_IDE_CONFIG: "serverName=Docker"
        networks:
            - aggregator_network

    # PostgreSQL 15
    org-catalog-db:
        image: postgis/postgis:15-3.4-alpine
        volumes:
            - dbdata:/var/lib/postgresql/data
        container_name: org-catalog-db
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - 5432:5432
        networks:
            - aggregator_network


    org-catalog-zookeeper:
        image: confluentinc/cp-zookeeper:7.2.1
        hostname: org-catalog-zookeeper
        container_name: org-catalog-zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks:
            - aggregator_network

    org-catalog-kafka:
        image: confluentinc/cp-kafka:7.2.1
        hostname: org-catalog-kafka
        container_name: org-catalog-kafka
        depends_on:
            - org-catalog-zookeeper
        ports:
            - "9092:9092"
            - "9997:9997"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'org-catalog-zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://org-catalog-kafka:29092,PLAINTEXT_HOST://org-catalog-kafka:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9997
            KAFKA_JMX_HOSTNAME: org-catalog-kafka
        networks:
            - aggregator_network

    org-catalog-kafka-ui:
        container_name: org-catalog-kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
            - 8082:8080
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: org-catalog-kafka:29092
            KAFKA_CLUSTERS_0_METRICS_PORT: 9997
        networks:
            - aggregator_network
        depends_on:
            - org-catalog-kafka

    org-catalog-kafka-init-topics:
        image: confluentinc/cp-kafka:7.2.1
        depends_on:
            - org-catalog-kafka
        command: "bash -c 'echo Waiting for Kafka to be ready... && \
               cub kafka-ready -b org-catalog-kafka:29092 1 30 && \
               kafka-topics --create --topic telegram_notification_to_dev --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server org-catalog-kafka:29092'"

volumes:
    dbdata:

networks:
    aggregator_network:
        driver: bridge
        name: org-catalog
